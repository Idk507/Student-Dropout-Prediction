{"trial_id": "000", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units0", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation0", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp0", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "rmsprop", "conditions": [], "values": ["rmsprop", "adam", "sgd", "nadam"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units1", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation1", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp1", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "units2", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation2", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp2", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "units3", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation3", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp3", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "units4", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation4", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp4", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "units5", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation5", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp5", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "units6", "default": null, "conditions": [], "min_value": 8, "max_value": 40, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation6", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drp6", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}], "values": {"num_layers": 7, "units0": 28, "activation0": "tanh", "drp0": 0.8, "optimizer": "nadam", "units1": 8, "activation1": "relu", "drp1": 0.1, "units2": 8, "activation2": "relu", "drp2": 0.1, "units3": 8, "activation3": "relu", "drp3": 0.1, "units4": 8, "activation4": "relu", "drp4": 0.1, "units5": 8, "activation5": "relu", "drp5": 0.1, "units6": 8, "activation6": "relu", "drp6": 0.1}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\danus\\AppData\\Local\\Temp\\__autograph_generated_filekq4cvcm4.py\", line 18, in tf__train_function\n    raise\nValueError: in user code:\n\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\engine\\training.py\", line 1401, in train_function  *\n        return step_function(self, iterator)\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\engine\\training.py\", line 1384, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\engine\\training.py\", line 1373, in run_step  **\n        outputs = model.train_step(data)\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\engine\\training.py\", line 1150, in train_step\n        y_pred = self(x, training=True)\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 70, in error_handler\n        raise e.with_traceback(filtered_tb) from None\n    File \"c:\\Users\\danus\\miniconda3\\envs\\idk_gpu\\Lib\\site-packages\\keras\\src\\engine\\input_spec.py\", line 298, in assert_input_compatibility\n        raise ValueError(\n\n    ValueError: Input 0 of layer \"sequential\" is incompatible with the layer: expected shape=(None, 24), found shape=(None, 26)\n\n"}